{"version":3,"sources":["components/Notification.js","components/Filter.js","services/persons.js","components/PersonForm.js","components/People.js","App.js","reportWebVitals.js","index.js"],"names":["Notification","message","className","Filter","filter","nameFilter","state","nameFilterSetter","setter","onChange","event","filterValue","target","value","console","log","baseURL","exports","getPeople","axios","get","then","response","data","createPerson","newPerson","post","deletePerson","personId","delete","updatePerson","id","updatedPerson","put","timeout","PersonForm","name","number","people","error","success","newName","persons","phoneNumber","nameSetter","onSubmit","preventDefault","length","undefined","find","person","idx","findIndex","msg","window","confirm","services","newPersons","map","setTimeout","catch","_","setNewPhoneNumber","concat","alert","type","People","peopleToShow","toLowerCase","startsWith","spaceIdx","indexOf","onClick","p","slice","App","useState","setPersons","setNewName","setPhoneNumber","setNameFilter","errorMsg","setErrorMsg","successMsg","setSuccessMsg","useEffect","filterObject","nameObject","phoneObject","peopleObject","errorObject","successObject","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a37cc62.chunk.js","sourcesContent":["const Notification = ({ message, className }) => {\r\n  if (message === null) return null\r\n  \r\n  if (className === \"error\") {\r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  } else {\r\n    return ( \r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","const Filter = ({ filter }) => {\r\n\r\n    const nameFilter = filter.state \r\n    const nameFilterSetter = filter.setter\r\n\r\n    const filterChangeHandler = (event) => {\r\n      const filterValue = event.target.value\r\n  \r\n      console.log('Current filter: ', filterValue)\r\n      nameFilterSetter(filterValue)\r\n    }\r\n\r\n    return (\r\n      <form>\r\n        <div>\r\n          {'Filter shown with: '}\r\n          <input \r\n            onChange={filterChangeHandler}\r\n            value={nameFilter}\r\n          />\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default Filter","import axios from 'axios';\r\n\r\n//const baseURL = 'http://localhost:3001/api/persons'\r\nconst baseURL = 'https://fullstackcourse-phonebook-vbjk.herokuapp.com/api/persons'\r\n\r\nconst getPeople = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => {\r\n        console.log(response.data)\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst createPerson = (newPerson) => {\r\n    const request = axios.post(baseURL, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (personId) => {\r\n    const request = axios.delete(`${baseURL}/${personId}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (id, updatedPerson) => {\r\n    const request = axios.put(`${baseURL}/${id}`, updatedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst exports = { getPeople, createPerson, deletePerson, updatePerson }\r\n\r\nexport default exports\r\n","import services from '../services/persons'\r\n\r\nexport const timeout = 3000\r\n\r\nconst PersonForm = ({ name, number, people, error, success }) => {\r\n\r\n    const newName = name.state\r\n    const persons = people.state\r\n    const phoneNumber = number.state\r\n    const nameSetter = name.setter\r\n\r\n    const setNewPhoneNumber = () => {\r\n      const idx = persons.findIndex(person => person.name === newName)\r\n\r\n      const msg = `${persons[idx].name} is already added to phonebook. Replace the old number with a new one?`\r\n\r\n      if (!window.confirm(msg)) return\r\n      \r\n      let updatedPerson = { ...persons[idx], number: phoneNumber }\r\n      console.log('UPDATE: ', updatedPerson)\r\n\r\n      services\r\n        .updatePerson(updatedPerson.id, updatedPerson)\r\n        .then(data => {\r\n          console.log('Success: ', data)\r\n          const newPersons = persons.map(person => person.id !== updatedPerson.id ? person : data)\r\n          console.log('Updated array: ', newPersons)\r\n          people.setter(newPersons)\r\n          nameSetter('')\r\n          number.setter('')\r\n          success.setter(`${updatedPerson.name}'s number has been updated successfully!`)\r\n          setTimeout(\r\n            () => success.setter(null), \r\n            timeout\r\n          )\r\n        })\r\n        .catch(_ => {\r\n          error.setter(`Something went wrong during ${updatedPerson.name}'s phone number modification!`)\r\n          setTimeout(() => {\r\n            error.setter(null)\r\n          }, timeout)\r\n        })\r\n\r\n    }\r\n\r\n    const addPersonToPhoneBook = (event) => {\r\n        event.preventDefault()\r\n    \r\n        if (newName.length === 0 || phoneNumber.length === 0) {\r\n            alert('Please, enter both the name and the phone number')\r\n            return\r\n        }\r\n    \r\n        let userWithNameNotExists = persons.find(person => person.name === newName) !== undefined\r\n    \r\n        if (userWithNameNotExists) {\r\n          setNewPhoneNumber()\r\n          return\r\n        }\r\n    \r\n        console.log('Adding ', {newName}, ' to the phonebook.')\r\n        const newPerson = { \r\n          name: newName,\r\n          number: phoneNumber\r\n        }\r\n\r\n        services\r\n          .createPerson(newPerson)  // newPerson must NOT be used below -> id is missing - use 'data' instead\r\n          .then(data => {\r\n            console.log('Added: ', data)\r\n            people.setter(persons.concat(data))\r\n            success.setter(`${newName} has been added to the phonebook.`)\r\n            setTimeout(\r\n              () => success.setter(null),\r\n              timeout\r\n            )\r\n            nameSetter('')\r\n            number.setter('')\r\n          })\r\n          .catch(() => {\r\n            error.setter(`Something went wrong while adding ${newPerson.name} to the phonebook.`)\r\n            setTimeout(\r\n              () => error.setter(null),\r\n              timeout\r\n            )\r\n          })\r\n    }\r\n\r\n    const nameChangeHandler = (event) => {\r\n        let name = event.target.value\r\n        console.log('Current input state: ', name)\r\n        nameSetter(name)\r\n    }\r\n    \r\n    const phoneNumberHandler = (event) => {\r\n        const phoneNumber = event.target.value\r\n        console.log('Current phone number: ', phoneNumber)\r\n        number.setter(phoneNumber)\r\n    }\r\n    \r\n\r\n    return (\r\n      <form onSubmit={addPersonToPhoneBook}>\r\n        <div>\r\n          name: <input \r\n                  onChange={nameChangeHandler} \r\n                  value={newName}\r\n                />\r\n        </div>\r\n        <div>\r\n          number: <input\r\n                    onChange={phoneNumberHandler}\r\n                    value={phoneNumber}  \r\n                  />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">Add new person</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import services from '../services/persons'\r\nimport { timeout } from './PersonForm'\r\n\r\nconst People = ({ people, filter, success, error }) => {\r\n\r\n    const nameFilter = filter.state\r\n    let persons = people.state\r\n\r\n    const deletePerson = (person) => {\r\n      if (! window.confirm(`Delete ${person.name} from the phonebook?`)) return\r\n\r\n      services\r\n        .deletePerson(person.id)\r\n        .then(_ => {\r\n          const newPersons = persons.filter(p => p.id !== person.id)\r\n          success.setter(`${person.name} has been deleted successfully.`)\r\n          people.setter(newPersons)\r\n          setTimeout(\r\n            () => success.setter(null),\r\n            timeout\r\n          )\r\n        })\r\n        .catch(() => {\r\n          error.setter(`Something went wrong while deleting ${person.name}.`)\r\n          setTimeout(\r\n            () => error.setter(null),\r\n            timeout\r\n          )\r\n        })\r\n    }\r\n\r\n    let peopleToShow = persons.filter(\r\n            person => person.name.toLowerCase().startsWith(nameFilter.toLowerCase())\r\n    )\r\n\r\n    if (peopleToShow.length === 0) return <div>No people to show.</div>\r\n  \r\n    return (\r\n      peopleToShow.map( \r\n        person => {\r\n          let spaceIdx = person.name.indexOf(' ')\r\n\r\n          spaceIdx = (spaceIdx === -1) \r\n                          ? person.name.length \r\n                          : spaceIdx\r\n\r\n          return (\r\n            <div key={person.id} className=\"person\">\r\n              {`${person.name} ${person.number} `}\r\n              <button onClick={() => deletePerson(person)}>\r\n                Delete {person.name.slice(0, spaceIdx)}\r\n              </button>\r\n            </div>\r\n          )\r\n        }\r\n      )\r\n    )\r\n}\r\n\r\nexport default People","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport People from './components/People'\nimport PersonForm from './components/PersonForm'\nimport services from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ phoneNumber, setPhoneNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ errorMsg, setErrorMsg ] = useState(null)\n  const [ successMsg, setSuccessMsg ] = useState(null)\n\n  useEffect(() => {\n    services.getPeople()    \n      .then(data => {\n        console.log(data)\n        setPersons(data)\n      })\n  }, [])\n\n  const filterObject = { state: nameFilter, setter: setNameFilter }\n  const nameObject = { state: newName, setter: setNewName }\n  const phoneObject = { state: phoneNumber, setter: setPhoneNumber }\n  const peopleObject = { state: persons, setter: setPersons }\n  const errorObject = {state: errorMsg, setter: setErrorMsg }\n  const successObject = {state: successMsg, setter: setSuccessMsg }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMsg} className=\"error\"/>\n      <Notification message={successMsg} className=\"success\"/>\n      <Filter filter={filterObject}/>\n      <h3>Add a new</h3>\n      \n      <PersonForm \n        name={nameObject}\n        number={phoneObject}\n        people={peopleObject}\n        error={errorObject}\n        success={successObject}\n      />\n\n      <h3>Numbers</h3>\n       <People \n        people={peopleObject} \n        filter={filterObject}\n        error={errorObject}\n        success={successObject}/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}